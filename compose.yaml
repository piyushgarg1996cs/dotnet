version: '3.7'
services:
  webserver:
    image: "nginx:alpine"
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - .docker/webserver/config/vhost.dev.conf:/etc/nginx/templates/default.conf.template

  frontend:
    build:
      context: ./Frontend-Vuetify
      dockerfile: ../.docker/frontend/Dockerfile
      target: dev
    restart: unless-stopped
    environment:
      APP_ENV: "dev"
    ports:
      - 3000:3000
    volumes:
      - ./Frontend-Vuetify:/app/frontend
      - /app/frontend/node_modules

  backend:
    build:
      context: .
      dockerfile: .docker/backend/Dockerfile
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - ASPNETCORE_URLS=http://+:8080 #PORT
      - ASPNETCORE_ENVIRONMENT=Development
    secrets: # Need to be used in the connection string
      - db__user_password
    depends_on:
      - db

  db:
    image: mysql:5.7
    restart: unless-stopped
    command: '--default-authentication-plugin=mysql_native_password'
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD_FILE: /run/secrets/db__user_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db__root_password
      MYSQL_HOST: 'db'
      MYSQL_ROOT_HOST: '%'
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db__root_password)" --silent']
      interval: 10s
      retries: 5
      start_period: 30s
    secrets:
      - db__user_password
      - db__root_password

  migration:
    build:
      context: .
      dockerfile: .docker/migration/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;User ID=root;Password=password;Database=db;SSL Mode=None
    depends_on:
      - db

volumes:
  db-data:

secrets:
  db__root_password:
    file: .docker/db/secrets/db-root-password.txt
  db__user_password:
    file: .docker/db/secrets/db-user-password.txt